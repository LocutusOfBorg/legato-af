sandboxed: false

executables:
{
    dcsDaemon = (
    #if ${LE_CONFIG_ENABLE_ETHERNET} = y
                  $LEGATO_ROOT/components/dataConnectionService/dcsEthernet
    #endif
    #if ${LE_CONFIG_ENABLE_WIFI} = y
                  $LEGATO_ROOT/components/dataConnectionService/dcsWifi
    #endif
                  $LEGATO_ROOT/components/dataConnectionService/dcsCellular
                  $LEGATO_ROOT/components/dataConnectionService/dcsNet
                  $LEGATO_ROOT/components/dataConnectionService/dcs
                  $LEGATO_ROOT/components/dataConnectionService/dcsDaemon
                 )
    dcsInternal = ( $LEGATO_ROOT/components/dataConnectionService/dcsInternal )
}

processes:
{
    run:
    {
        (dcsDaemon)
        (dcsInternal)
    }

    faultAction: restart
    #if ${LE_CONFIG_SERVICES_WATCHDOG} = y
        maxWatchdogTimeout: 120000
    #else
        watchdogTimeout: never
    #endif

#if ${LE_CONFIG_RTOS} = y
    maxStackBytes: 8192
#endif
}

bindings:
{
    dcsDaemon.dcsDaemon.le_mrc -> modemService.le_mrc
    dcsDaemon.watchdogChain.le_wdog -> <root>.le_wdog
    dcsDaemon.dcs.le_mdc -> modemService.le_mdc
    dcsDaemon.dcs.le_mrc -> modemService.le_mrc
    dcsDaemon.dcs.le_appInfo -> <root>.le_appInfo
    dcsDaemon.dcsNet.le_appInfo -> <root>.le_appInfo
    dcsDaemon.dcsCellular.le_mdc -> modemService.le_mdc
    dcsDaemon.dcsCellular.le_mrc -> modemService.le_mrc
    dcsInternal.dcsInternal.le_dcs -> <root>.le_dcs
#if ${LE_CONFIG_ENABLE_WIFI} = y
    dcsDaemon.dcsDaemon.le_wifiClient -> <root>.le_wifiClient
    dcsDaemon.dcsWifi.le_wifiClient -> <root>.le_wifiClient
#endif
}

requires:
{
    configTree:
    {
        [r] .
    }
}

extern:
{
    dcsDaemon.dcsDaemon.le_data
    dcsDaemon.dcs.le_dcs
    dcsDaemon.dcsNet.le_net
}
